{"ast":null,"code":"var _jsxFileName = \"/Users/denisdanailov/Documents/secondparts-app/frontend/src/components/Admins.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { UserItem } from \"./UserItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Admins = () => {\n  _s();\n\n  const API_URL = \"http://localhost:8080/api/users/all\";\n\n  const getAll = async () => {\n    const response = await fetch(API_URL);\n    const result = await response.json();\n    return result.users;\n  };\n\n  const [users, setUsers] = useState([]);\n  useEffect(() => {\n    getAll().then(users => setUsers(users));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: users.map(user => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: /*#__PURE__*/_jsxDEV(UserItem, {\n          user: user\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this)\n      }, user._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Admins, \"JadZszbqna06PpJs9hMo7Hl/LOY=\");\n\n_c = Admins;\n\nvar _c;\n\n$RefreshReg$(_c, \"Admins\");","map":{"version":3,"names":["useState","useEffect","UserItem","Admins","API_URL","getAll","response","fetch","result","json","users","setUsers","then","map","user","_id"],"sources":["/Users/denisdanailov/Documents/secondparts-app/frontend/src/components/Admins.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\n\nimport { UserItem } from \"./UserItem\";\n\nexport const Admins = () => {\n  const API_URL = \"http://localhost:8080/api/users/all\";\n\n  const getAll = async () => {\n    const response = await fetch(API_URL);\n    const result = await response.json();\n\n    return result.users;\n  };\n\n  const [users, setUsers] = useState([]);\n\n  useEffect(() => {\n    getAll().then((users) => setUsers(users));\n  }, []);\n\n  return (\n    <section>\n      <tbody>\n        {users.map((user) => (\n          <tr key={user._id}>\n            <UserItem user={user} />\n          </tr>\n        ))}\n      </tbody>\n    </section>\n  );\n};\n"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,SAASC,QAAT,QAAyB,YAAzB;;AAEA,OAAO,MAAMC,MAAM,GAAG,MAAM;EAAA;;EAC1B,MAAMC,OAAO,GAAG,qCAAhB;;EAEA,MAAMC,MAAM,GAAG,YAAY;IACzB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACH,OAAD,CAA5B;IACA,MAAMI,MAAM,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAArB;IAEA,OAAOD,MAAM,CAACE,KAAd;EACD,CALD;;EAOA,MAAM,CAACA,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,EAAD,CAAlC;EAEAC,SAAS,CAAC,MAAM;IACdI,MAAM,GAAGO,IAAT,CAAeF,KAAD,IAAWC,QAAQ,CAACD,KAAD,CAAjC;EACD,CAFQ,EAEN,EAFM,CAAT;EAIA,oBACE;IAAA,uBACE;MAAA,UACGA,KAAK,CAACG,GAAN,CAAWC,IAAD,iBACT;QAAA,uBACE,QAAC,QAAD;UAAU,IAAI,EAAEA;QAAhB;UAAA;UAAA;UAAA;QAAA;MADF,GAASA,IAAI,CAACC,GAAd;QAAA;QAAA;QAAA;MAAA,QADD;IADH;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAWD,CA3BM;;GAAMZ,M;;KAAAA,M"},"metadata":{},"sourceType":"module"}