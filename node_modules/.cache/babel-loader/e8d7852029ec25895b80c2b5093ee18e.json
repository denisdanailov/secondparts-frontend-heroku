{"ast":null,"code":"import axios from \"axios\";\nimport { useState } from \"react\";\nconst API_URL = \"http://localhost:8080/api/auth/\";\n\nclass AuthService {\n  async login(username, password) {\n    const response = await axios.post(API_URL + \"signin\", {\n      username,\n      password\n    });\n\n    if (response.data.accessToken) {\n      localStorage.setItem(\"user\", JSON.stringify(response.data));\n    }\n\n    return response.data;\n  }\n\n  logout() {\n    localStorage.removeItem(\"user\");\n    localStorage.clear();\n  }\n\n  register(firstName, lastName, username, email, password) {\n    return axios.post(API_URL + \"signup\", {\n      firstName,\n      lastName,\n      username,\n      email,\n      password\n    });\n  }\n\n  getCurrentUser() {\n    return JSON.parse(localStorage.getItem(\"user\"));\n  }\n\n}\n\nexport default new AuthService();","map":{"version":3,"names":["axios","useState","API_URL","AuthService","login","username","password","response","post","data","accessToken","localStorage","setItem","JSON","stringify","logout","removeItem","clear","register","firstName","lastName","email","getCurrentUser","parse","getItem"],"sources":["/Users/denisdanailov/Documents/secondparts-app/frontend/src/services/auth.service.js"],"sourcesContent":["import axios from \"axios\";\nimport { useState } from \"react\";\n\nconst API_URL = \"http://localhost:8080/api/auth/\";\n\nclass AuthService {\n  async login(username, password) {\n    const response = await axios.post(API_URL + \"signin\", {\n      username,\n      password,\n    });\n    if (response.data.accessToken) {\n      localStorage.setItem(\"user\", JSON.stringify(response.data));\n    }\n    return response.data;\n  }\n\n  logout() {\n    localStorage.removeItem(\"user\");\n    localStorage.clear();\n  }\n\n  register(firstName, lastName, username, email, password) {\n    return axios.post(API_URL + \"signup\", {\n      firstName,\n      lastName,\n      username,\n      email,\n      password,\n    });\n  }\n\n  getCurrentUser() {\n    return JSON.parse(localStorage.getItem(\"user\"));\n  }\n}\n\nexport default new AuthService();\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AAEA,MAAMC,OAAO,GAAG,iCAAhB;;AAEA,MAAMC,WAAN,CAAkB;EACL,MAALC,KAAK,CAACC,QAAD,EAAWC,QAAX,EAAqB;IAC9B,MAAMC,QAAQ,GAAG,MAAMP,KAAK,CAACQ,IAAN,CAAWN,OAAO,GAAG,QAArB,EAA+B;MACpDG,QADoD;MAEpDC;IAFoD,CAA/B,CAAvB;;IAIA,IAAIC,QAAQ,CAACE,IAAT,CAAcC,WAAlB,EAA+B;MAC7BC,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAeP,QAAQ,CAACE,IAAxB,CAA7B;IACD;;IACD,OAAOF,QAAQ,CAACE,IAAhB;EACD;;EAEDM,MAAM,GAAG;IACPJ,YAAY,CAACK,UAAb,CAAwB,MAAxB;IACAL,YAAY,CAACM,KAAb;EACD;;EAEDC,QAAQ,CAACC,SAAD,EAAYC,QAAZ,EAAsBf,QAAtB,EAAgCgB,KAAhC,EAAuCf,QAAvC,EAAiD;IACvD,OAAON,KAAK,CAACQ,IAAN,CAAWN,OAAO,GAAG,QAArB,EAA+B;MACpCiB,SADoC;MAEpCC,QAFoC;MAGpCf,QAHoC;MAIpCgB,KAJoC;MAKpCf;IALoC,CAA/B,CAAP;EAOD;;EAEDgB,cAAc,GAAG;IACf,OAAOT,IAAI,CAACU,KAAL,CAAWZ,YAAY,CAACa,OAAb,CAAqB,MAArB,CAAX,CAAP;EACD;;AA7Be;;AAgClB,eAAe,IAAIrB,WAAJ,EAAf"},"metadata":{},"sourceType":"module"}